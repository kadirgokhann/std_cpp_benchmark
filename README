# Container Benchmark

This program benchmarks the performance of iterating over different C++ containers: `std::vector`, `std::list`, `std::deque`, and `std::set`. The goal is to compare the time taken to sum the elements in each container.

## Containers Tested
1. `std::vector`
2. `std::list`
3. `std::deque`
4. `std::set`

Each container is filled with 262,144 elements using `std::iota` for contiguous containers, and `std::set` is filled using the `insert` method.

## Compilation

To compile the program, use the following command:

g++ -O0 -std=c++11 benchmark.cpp -o benchmark

Here, the `-O0` flag disables optimizations, and `-std=c++11` ensures that the program is compiled with C++11 standard or higher.

## Usage

After compiling the program, run it:

./benchmark

The output will show the execution times for each container in microseconds.

## Example Output

testVector execution time: 120 microseconds
testList execution time: 450 microseconds
testDeque execution time: 130 microseconds
testSet execution time: 780 microseconds

## Explanation

- **Vector**: Stores elements contiguously in memory, leading to good cache performance and generally faster iteration.
- **List**: A doubly linked list, resulting in slower access due to pointer traversal.
- **Deque**: Similar to a vector but allows for efficient insertion and deletion at both ends.
- **Set**: An ordered set that keeps elements sorted, but slower for iteration due to pointer traversal and tree balancing.
